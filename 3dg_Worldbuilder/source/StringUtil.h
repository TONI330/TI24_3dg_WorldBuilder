#pragma once

#include <string>
#include <vector>
#include <algorithm>
class StringUtil
{
public:
	/**
	* Returns the index of a string if this string is in the array, else it returns -1
	* @param params is a string array, usually generated by the split() method
	* @param check is the string that IndexOf tries to find in the params array
	* @return returns the index of the check string if it's found, else returns -1
	*/
	static int IndexOf(std::vector<std::string> params, const char* check);

	/**
	* Replaces a substring in a string
	* @param str is the input string
	* @param toReplace is the part of the input string, if this is not a part of the input string, the method will do nothing
	* @param replacement is the string that will replace the toReplace string
	*/
	static std::string replace(std::string str, const std::string& toReplace, const std::string& replacement);

	/**
	* Splits a string into substrings, based on a seperator
	* @param str is the string that will be split
	* @param separator is the string that will separate str
	* @return returns a vector of strings with parts of str, without the separator itself
	*/
	static std::vector<std::string> split(std::string str, const std::string& seperator);

	/**
	* Turns a string to lowercase
	* @param data is the string that will be lowered
	* @return returns data but entirely lowercase
	*/
	static std::string toLower(std::string data);


	/**
	* Cleans up a line for processing; every whitespace (tabs and spaces) will be turned into spaces, also removes spaces from front and back
	* @param line is the input string
	* @return returns a string without more than 1 space in a row
	*/
	static std::string cleanLine(std::string line);



};

